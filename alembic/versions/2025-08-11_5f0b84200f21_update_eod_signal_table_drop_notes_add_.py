"""Update eod_signal table, drop notes, add validate at open fields

Revision ID: 5f0b84200f21
Revises: 2b4e0b2b01dd
Create Date: 2025-08-11 11:10:33.982268

"""

from typing import Sequence, Union

import sqlalchemy as sa

from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5f0b84200f21"
down_revision: Union[str, Sequence[str], None] = "2b4e0b2b01dd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "eod_signal", sa.Column("validated_at_open", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "eod_signal", sa.Column("next_open_price", sa.Numeric(), nullable=True)
    )
    op.add_column(
        "eod_signal",
        sa.Column(
            "validated_at_open_failures", postgresql.ARRAY(sa.String()), nullable=True
        ),
    )
    op.create_index(
        op.f("ix_eod_signal_validated_at_open"),
        "eod_signal",
        ["validated_at_open"],
        unique=False,
    )
    op.drop_column("eod_signal", "notes")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "eod_signal",
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix_eod_signal_validated_at_open"), table_name="eod_signal")
    op.drop_column("eod_signal", "validated_at_open_failures")
    op.drop_column("eod_signal", "next_open_price")
    op.drop_column("eod_signal", "validated_at_open")
    # ### end Alembic commands ###
