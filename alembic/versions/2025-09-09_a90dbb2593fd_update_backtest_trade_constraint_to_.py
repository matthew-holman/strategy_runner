"""update backtest trade constraint to allow for different signal and execution strategies

Revision ID: a90dbb2593fd
Revises: d36b178b9d53
Create Date: 2025-09-09 16:07:26.671954

"""

from typing import Sequence, Union

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a90dbb2593fd"
down_revision: Union[str, Sequence[str], None] = "d36b178b9d53"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_backtest_trade_strategy_id"), table_name="backtest_trade")
    op.drop_constraint(
        op.f("uq_backtest_trade_run_signal"), "backtest_trade", type_="unique"
    )
    op.create_index(
        op.f("ix_backtest_trade_signal_strategy_id"),
        "backtest_trade",
        ["signal_strategy_id"],
        unique=False,
    )
    op.create_unique_constraint(
        "uq_backtest_trade_signal_execution_strategy_per_run",
        "backtest_trade",
        ["run_id", "eod_signal_id", "execution_strategy_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "uq_backtest_trade_signal_execution_strategy_per_run",
        "backtest_trade",
        type_="unique",
    )
    op.drop_index(
        op.f("ix_backtest_trade_signal_strategy_id"), table_name="backtest_trade"
    )
    op.create_unique_constraint(
        op.f("uq_backtest_trade_run_signal"),
        "backtest_trade",
        ["run_id", "eod_signal_id"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_index(
        op.f("ix_backtest_trade_strategy_id"),
        "backtest_trade",
        ["signal_strategy_id"],
        unique=False,
    )
    # ### end Alembic commands ###
